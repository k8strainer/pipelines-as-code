# Version for Artifact Hub with Remote Resolver

apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: pipelines-as-code-v0.1
  labels:
    app: testrun2
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request, push, issue_comment]"
    pipelinesascode.tekton.dev/on-target-branch: "[artifact-v0.1]"
    pipelinesascode.tekton.dev/on-comment: '["/retest"]'
    # Max history
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  taskRunTemplate:
    podTemplate:
      securityContext:
        fsGroup: 65532

  params:
  - name: repo_url
    value: "{{ repo_url }}"
  - name: revision
    value: "{{ revision }}"

  pipelineSpec:
    params:
    - name: repo_url
    - name: revision
    workspaces:
    - name: source
    - name: basic-auth

    tasks:
    - name: fetch-repository
      taskRef:
        resolver: hub
        params:
        - name: catalog
          value: tekton-catalog-tasks
        - name: type
          value: artifact          # Artifact Hub
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: version
          value: "0.9.0"
      workspaces:
      - name: output
        workspace: source
      - name: basic-auth
        workspace: basic-auth
      params:
      - name: url
        value: $(params.repo_url)
      - name: revision
        value: $(params.revision)

    - name: golang-test
      runAfter:
      - fetch-repository
      taskRef:
        resolver: hub
        params:
        - name: catalog
          value: tekton-catalog-tasks
        - name: type
          value: artifact
        - name: kind
          value: task
        - name: name
          value: golang-test
        - name: version
          value: "0.1.0"
      workspaces:
      - name: source
        workspace: source
      params:
      - name: package
        value: github.com/k8strainer/pipelines-as-code

    - name: noop-task
      runAfter:
      - golang-test
      taskSpec:
        workspaces:
        - name: source
        steps:
        - name: noop
          image: registry.access.redhat.com/ubi9/ubi-micro
          workingDir: $(workspaces.source.path)
          script: |
            echo "testrun 01 for MAIN branch"
            exit 0
      workspaces:
      - name: source
        workspace: source

  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
  # Secret for private repos if needed
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
