# Version "artifact-v0.2" for Artifact Hub with direkt link

apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: pipelines-as-code
  labels:
    app: testrun2
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request, push, issue_comment]"
    pipelinesascode.tekton.dev/on-target-branch: "[artifact-v0.2]"
    ## Artifact Hub is still using github content from tekton, check with : 
    ## https://artifacthub.io/api/v1/packages/tekton-task/tekton-catalog-tasks/golang-test/ -> "content_url:" <"value">
    pipelinesascode.tekton.dev/task: ["https://raw.githubusercontent.com/tektoncd/catalog/main/task/golang-test/0.2/golang-test.yaml"]
    #pipelinesascode.tekton.dev/task-1: ["https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-clone/0.9/git-clone.yaml"]
    ## 
    pipelinesascode.tekton.dev/on-comment: '["/retest"]'
    # Max history
    pipelinesascode.tekton.dev/max-keep-runs: "5"

spec:
  taskRunTemplate:
    podTemplate:
     # needed for git-clone 0.9, otherwise 'permission denied' error
      securityContext:
        fsGroup: 65532

  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
 
      - name: golang-test
        taskRef:
          name: golang-test
        runAfter:
         - fetch-repository
        workspaces:
         - name: source
           workspace: source
        params:
        - name: package
          value: github.com/k8strainer/pipelines-as-code
      
      # Customize this task if you like, or just do a taskRef
      # to one of the hub task.
      - name: noop-task
        displayName: Task with no effect
        runAfter:
          - golang-test
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          workspaces:
            - name: source
          steps:
            - name: noop-task
              image: registry.access.redhat.com/ubi9/ubi-micro
              workingDir: $(workspaces.source.path)
              script: |
                echo "testrun 01 for MAIN branch"
                exit 0
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    # This workspace will inject secret to help the git-clone task to be able to
    # checkout the private repositories
    - name: basic-auth
      secret:
        secretName: "{{ git_auth_secret }}"
